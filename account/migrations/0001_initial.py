# Generated by Django 3.2.4 on 2021-07-19 23:17

import account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sessions', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('staffname', models.TextField(blank=True, null=True, verbose_name='staffname')),
                ('staffid', models.TextField(blank=True, null=True)),
                ('is_credit_officer', models.BooleanField(default=False)),
                ('is_branch_manager', models.BooleanField(default=False)),
                ('is_senior_manager', models.BooleanField(default=False)),
                ('is_agency_bank', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True, verbose_name='is_staff')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date_joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', account.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=100, null=True)),
                ('group_name', models.TextField(null=True)),
                ('active', models.BooleanField(default=False)),
                ('date_created', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'groups',
            },
        ),
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.TextField(blank=True, null=True)),
                ('app_type', models.TextField(blank=True, null=True)),
                ('form_no', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('member_no', models.TextField(blank=True, null=True)),
                ('branch', models.TextField(blank=True, null=True)),
                ('date_of_app', models.DateField(auto_now=True)),
                ('fullname', models.TextField(blank=True, null=True)),
                ('name_of_father', models.TextField(blank=True, null=True)),
                ('phoneno', models.TextField(blank=True, null=True)),
                ('residence_address', models.TextField(blank=True, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('marital_status', models.TextField(blank=True, null=True)),
                ('formal_edu', models.TextField(blank=True, null=True)),
                ('next_of_kin', models.TextField(blank=True, null=True)),
                ('phone_next_of_kin', models.TextField(blank=True, null=True)),
                ('group_of_app', models.TextField(blank=True, null=True)),
                ('date_of_membership', models.DateField(blank=True, null=True)),
                ('type_of_business', models.TextField(blank=True, null=True)),
                ('business_duration', models.TextField(blank=True, null=True)),
                ('busness_address', models.TextField(blank=True, null=True)),
                ('family_on_hcdti_group', models.BooleanField(blank=True, null=True)),
                ('amt_savings_in_passbook', models.TextField(blank=True, null=True)),
                ('bank', models.TextField(blank=True, null=True)),
                ('account_no', models.TextField(blank=True, null=True)),
                ('last_loan_recieved', models.TextField(blank=True, null=True)),
                ('date_last_loan_repaid', models.TextField(blank=True, null=True)),
                ('loan_applied_for', models.TextField(blank=True, null=True)),
                ('indepted_to_mfb_mfi', models.BooleanField(blank=True, null=True)),
                ('outsanding', models.TextField(blank=True, null=True)),
                ('name_of_guarantor', models.TextField(blank=True, null=True)),
                ('guarantor_relationship', models.TextField(blank=True, null=True)),
                ('guarantor_occupation', models.TextField(blank=True, null=True)),
                ('guarantor_home_address', models.TextField(blank=True, null=True)),
                ('guarantor_office_address', models.TextField(blank=True, null=True)),
                ('rec_from_group_1', models.TextField(blank=True, null=True)),
                ('rec_from_group_2', models.TextField(blank=True, null=True)),
                ('credit_officer_approve', models.CharField(default='APPROVED', max_length=100)),
                ('credit_officer_name', models.TextField(blank=True, null=True)),
                ('branch_manager_approve', models.CharField(default='PENDING', max_length=100)),
                ('branch_manager_name', models.TextField(blank=True, null=True)),
                ('branch_manager_reason', models.TextField(blank=True, null=True)),
                ('bm_date_action', models.DateField(blank=True, null=True)),
                ('senior_manager_approve', models.CharField(default='PENDING', max_length=100)),
                ('senior_manager_name', models.TextField(blank=True, null=True)),
                ('senior_manager_reason', models.TextField(blank=True, null=True)),
                ('sm_date_action', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'loan_application',
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True)),
                ('otp_code', models.TextField(null=True)),
                ('dt_created', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'otp',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sessions.session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_session',
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groups_id', models.TextField(null=True)),
                ('member_name', models.TextField(null=True)),
                ('mobile_number', models.TextField(null=True)),
                ('is_leader', models.BooleanField(null=True)),
                ('date_added', models.DateField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.groups')),
            ],
            options={
                'db_table': 'group_member',
            },
        ),
    ]
